apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "replicated.labels" . | nindent 4 }}
  name: replicated
spec:
  selector:
    matchLabels:
      {{- include "replicated.selectorLabels" . | nindent 6 }}
  strategy:
    # this is to avoid having two replicated instances reporting at the same time for different app versions.
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "replicated.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: replicated
        image: {{ .Values.images.replicated }}
        imagePullPolicy: IfNotPresent
        env:
        - name: REPLICATED_LICENSE_BASE64
          value: {{ .Values.license | b64enc }}
        - name: REPLICATED_LICENSE_FIELDS_BASE64
          value: {{ include "replicated.licenseFields" . | b64enc }}
        - name: REPLICATED_APP_NAME
          value: {{ .Values.appName }}
        - name: REPLICATED_CHANNEL_ID
          value: {{ .Values.channelID }}
        - name: REPLICATED_CHANNEL_NAME
          value: {{ .Values.channelName }}
        - name: REPLICATED_CHANNEL_SEQUENCE
          value: "{{ .Values.channelSequence }}"
        - name: REPLICATED_RELEASE_SEQUENCE
          value: "{{ .Values.releaseSequence }}"
        - name: REPLICATED_VERSION_LABEL
          value: "{{ .Values.versionLabel }}"
        - name: REPLICATED_INFORMERS_LABEL_SELECTOR
          value: "app.kubernetes.io/managed-by={{ .Release.Service }},app.kubernetes.io/name!={{ include "replicated.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
        - name: REPLICATED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HELM_REVISION
          value: "{{ .Release.Revision }}"
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: replicated
status: {}
