# Default values for replicated.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""

# Additional labels to add to all resources created by this chart
commonLabels: {}
  # app.kubernetes.io/part-of: my-app
  # environment: production

# Additional annotations to add to resources
commonAnnotations: {}
  # example.com/annotation: value
  # prometheus.io/scrape: "true"

# Deployment configuration
replicaCount: 1

# Pod restart policy
# Options: Always, OnFailure, Never
restartPolicy: Always

# Deployment update strategy
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
strategy: {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0

# Deprecated: Use .Values.image instead of .Values.images
# The following properties for the Replicated SDK image are deprecated:
# 
# images:
#   replicated-sdk: ${REPLICATED_REGISTRY}/replicated/replicated-sdk:${REPLICATED_TAG}

# Replicated SDK image properties
# If .Values.images is set, it takes precedence over the following settings.
image:
  registry: ${REPLICATED_REGISTRY}
  repository: "replicated/replicated-sdk"
  tag: "${REPLICATED_TAG}"
  pullPolicy: IfNotPresent

# NOTE: The following values are typically injected by the Replicated Registry and should not be modified directly
license: ""
licenseFields: ""
appName: ""
channelID: ""
channelName: ""
channelSequence: -1
releaseSequence: -1
releaseCreatedAt: ""
releaseNotes: ""
versionLabel: ""
parentChartURL: ""
statusInformers: null
replicatedAppEndpoint: ""

# Domain for the Replicated App Service - takes precedence over replicatedAppEndpoint if set
# If not specified, the default domain "replicated.app" will be used
# Should not include the protocol, just the domain name
replicatedAppDomain: ""

serviceAccountName: ""
clusterRole: ""
imagePullSecrets: []
nameOverride: ""
namespaceOverride: ""

# Additional labels to add to the pod template
podLabels: {}
  # example.com/custom-label: value

# Pod security context
# Set to null to disable
podSecurityContext:
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  supplementalGroups: [1001]
  seccompProfile:
    type: "RuntimeDefault"

# Container security context
# Set to null to disable
containerSecurityContext:
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]

# Container resource requirements
# Leave empty to remove resource constraints
resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 100Mi

# Extra volumes to add to the pod
extraVolumes: []
  # - name: config-volume
  #   configMap:
  #     name: app-config
  # - name: secret-volume
  #   secret:
  #     secretName: app-secrets

# Extra volume mounts to add to the container
extraVolumeMounts: []
  # - name: config-volume
  #   mountPath: /etc/app/config
  #   readOnly: true
  # - name: secret-volume
  #   mountPath: /etc/app/secrets
  #   readOnly: true

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /healthz
    port: 3000
    scheme: HTTP
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1

# Init containers to run before the app container starts
initContainers: []
  # - name: init-myservice
  #   image: busybox:latest
  #   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']
  # - name: init-db
  #   image: busybox:latest
  #   command: ['sh', '-c', 'until nc -z -w1 postgresql 5432; do echo waiting for database; sleep 2; done;']

service:
  type: ClusterIP
  port: 3000

privateCAConfigmap: ~
privateCASecret: ~

extraEnv: []

# "integration" mode related values.
integration:
  licenseID: ""
  # enabled: false
  mockData: ""

isAirgap: false

replicatedID: ""
appID: ""

# Kubernetes service account config
automountServiceAccountToken: false

# Host network configuration
hostNetwork: false
hostIPC: false

# Host aliases for the pod's /etc/hosts file
hostAliases: []
#  - ip: "192.168.1.10"
#    hostnames:
#    - "example.com"
#    - "www.example.com"

# Pod topology spread constraints
topologySpreadConstraints: []
#  - maxSkew: 1
#    topologyKey: kubernetes.io/hostname
#    whenUnsatisfiable: DoNotSchedule
#    labelSelector:
#      matchLabels:
#        app.kubernetes.io/name: replicated-sdk

# Pod priority class name
priorityClassName: ""

# Pod scheduler name
schedulerName: ""

# Pod termination grace period in seconds
terminationGracePeriodSeconds: 30

tolerations: []

affinity: ~

nodeSelector: {}
