apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "replicated.labels" . | nindent 4 }}
  name: replicated
spec:
  selector:
    matchLabels:
      {{- include "replicated.selectorLabels" . | nindent 6 }}
  strategy:
    # this is to avoid having two replicated instances reporting at the same time for different app versions.
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "replicated.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: replicated
        image: {{ .Values.images.replicated }}
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: replicated
        env:
        - name: REPLICATED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IS_HELM_MANAGED
          value: "true"
        - name: HELM_RELEASE_NAME
          value: "{{ .Release.Name }}"
        - name: HELM_RELEASE_NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: HELM_RELEASE_REVISION
          value: "{{ .Release.Revision }}"
        - name: HELM_PARENT_CHART_URL
          value: "{{ .Values.parentChartURL }}"
        - name: HELM_DRIVER
          value: secret # TODO: support other drivers
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: replicated
status: {}
