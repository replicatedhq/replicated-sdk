apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "replicated.labels" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- toYaml .Values.commonAnnotations | nindent 4 }}
  {{- end }}
  name: {{ include "replicated.deploymentName" . }}
  namespace: {{ include "replicated.namespace" . | quote }}
spec:
  selector:
    matchLabels:
      {{- include "replicated.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/replicated-secret: {{ include (print $.Template.BasePath "/replicated-secret.yaml") . | sha256sum }}
        {{- if .Values.commonAnnotations }}
        {{- toYaml .Values.commonAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "replicated.labels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- include "replicated.podLabels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.automountServiceAccountToken }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- toYaml .Values.hostAliases | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      {{- if .Values.hostIPC }}
      hostIPC: {{ .Values.hostIPC }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- include "replicated.podSecurityContext" . | nindent 8 }}
      {{- end }}
      volumes:
      - name: replicated
        secret:
          secretName: {{ include "replicated.secretName" . }}
      {{- if .Values.privateCAConfigmap }}
      - name: additional-certs
        configMap:
          defaultMode: 420
          name: {{ .Values.privateCAConfigmap }}
      {{- else if .Values.privateCASecret }}
      - name: additional-certs
        secret:
          defaultMode: 420
          secretName: {{ .Values.privateCASecret.name }}
          items:
          - key: {{ .Values.privateCASecret.key }}
            path: ca.crt
      {{- end }}
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- toYaml .Values.initContainers | nindent 6 }}
      {{- end }}
      containers:
      - name: replicated
        image: {{ include "replicated.containerImage" . }}
        imagePullPolicy: {{ include "replicated.imagePullPolicy" . }}
        {{- if .Values.containerSecurityContext }}
        securityContext:
          {{- include "replicated.containerSecurityContext" . | nindent 12 }}
        {{- end }}
        volumeMounts:
        - name: replicated
          mountPath: /etc/replicated/config.yaml
          readOnly: true
          subPath: config.yaml
        {{- if .Values.privateCAConfigmap }}
        - mountPath: /certs
          name: additional-certs
        {{- else if .Values.privateCASecret }}
        - mountPath: /certs/ca.crt
          subPath: ca.crt
          name: additional-certs
        {{- end }}
        {{- if .Values.extraVolumeMounts }}
        {{- toYaml .Values.extraVolumeMounts | nindent 8 }}
        {{- end }}
        env:
        {{- with .Values.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if or .Values.privateCAConfigmap .Values.privateCASecret }}
        - name: SSL_CERT_DIR
          value: /certs
        {{- end }}
        - name: REPLICATED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: REPLICATED_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if .Values.isAirgap }}
        - name: DISABLE_OUTBOUND_CONNECTIONS
          value: {{ .Values.isAirgap | quote }}
        {{- end }}
        - name: IS_HELM_MANAGED
          value: "true"
        - name: HELM_RELEASE_NAME
          value: {{ .Release.Name }}
        - name: HELM_RELEASE_NAMESPACE
          value: {{ .Release.Namespace }}
        {{- if .Values.parentChartURL }}
        - name: HELM_PARENT_CHART_URL
          value: {{ .Values.parentChartURL | quote }}
        {{- end }}
        - name: HELM_DRIVER
          value: secret # TODO: support other drivers
        - name: REPLICATED_SECRET_NAME
          value: {{ include "replicated.secretName" . }}
        - name: REPLICATED_DEPLOYMENT_NAME
          value: {{ include "replicated.deploymentName" . }}
        - name: REPLICATED_CONFIG_FILE
          value: /etc/replicated/config.yaml
        {{- if (.Values.integration).licenseID }}
        - name: REPLICATED_INTEGRATION_LICENSE_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "replicated.secretName" . }}
              key: integration-license-id
        {{- end }}
        ports:
        - containerPort: 3000
          name: http
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
          {{- $readinessProbe := .Values.readinessProbe | deepCopy }}
          {{- if and .Values.tlsCertSecretName $readinessProbe.httpGet }}
            {{- $_ := set $readinessProbe.httpGet "scheme" "HTTPS" }}
          {{- end }}
          {{- toYaml $readinessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe }}
        livenessProbe:
          {{- $livenessProbe := .Values.livenessProbe | deepCopy }}
          {{- if and .Values.tlsCertSecretName $livenessProbe.httpGet }}
            {{- $_ := set $livenessProbe.httpGet "scheme" "HTTPS" }}
          {{- end }}
          {{- toYaml $livenessProbe | nindent 10 }}
        {{- end }}
      {{- if .Values.restartPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- end }}
      serviceAccountName: {{ include "replicated.serviceAccountName" . }}
